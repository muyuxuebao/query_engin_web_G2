package com.query_engin.thrift.thriftImpl; /**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum QueryType implements TEnum {
  GET_USER(0),
  ADD_USER(1),
  GET_WORD(2),
  ADD_WORD(3),
  GET_TOKEN(4),
  ADD_TOKEN(5),
  GET_ALL_USER(6),
  GET_ALL_WORD(7),
  GET_ALL_TOKEN(8);

  private final int value;

  private QueryType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static QueryType findByValue(int value) { 
    switch (value) {
      case 0:
        return GET_USER;
      case 1:
        return ADD_USER;
      case 2:
        return GET_WORD;
      case 3:
        return ADD_WORD;
      case 4:
        return GET_TOKEN;
      case 5:
        return ADD_TOKEN;
      case 6:
        return GET_ALL_USER;
      case 7:
        return GET_ALL_WORD;
      case 8:
        return GET_ALL_TOKEN;
      default:
        return null;
    }
  }
}
